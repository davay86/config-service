def pomLocation = "configuration-api-parent"
def dockerRepoName = "sleepingtalent/configuration-api"
def targetLocation = "configuration-api-parent/configuration-api/target"
def version

node {
  def img
  def releaseVersion
  def newDevVersion

  stage('Checkout') {
    checkout scm
  }

  stage('Build Application') {
    sh 'mvn -B -V -U -e -f '+pomLocation+'/pom.xml clean install'
  }

  stage('Tag Release'){
    def pom = readMavenPom file: pomLocation+'/pom.xml'
    version = pom.version
    releaseVersion = version.minus("-SNAPSHOT")

    sh "mvn " + pomLocation + "/pom.xml versions:set -DnewVersion=" + releaseVersion + "clean install"
    sh "mvn -B -V -U -e -f " + pomLocation + "/pom.xml release:clean release:prepare"

    pom = readMavenPom file: pomLocation+'/pom.xml'
    newDevVersion = pom.version
    sh "mvn " + pomLocation + "/pom.xml versions:set -DnewVersion=" + newDevVersion + "-SNAPSHOT"
  }

  stage('Package Image') {
    img = docker.build(dockerRepoName+':'+releaseVersion + '-RC', targetLocation)
  }

  stage('Push Image') {
    docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {
        img.push()
        img.push("latest")
    }
  }

  stage('Remove Local Image') {
       sh 'docker rmi -f registry.hub.docker.com/'+dockerRepoName+':latest'
       sh 'docker rmi -f registry.hub.docker.com/'+dockerRepoName+':'+version
       sh 'docker rmi -f '+dockerRepoName+':'+version
  }

}